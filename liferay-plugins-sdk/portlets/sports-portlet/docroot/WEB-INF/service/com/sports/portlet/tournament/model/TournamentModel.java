/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.sports.portlet.tournament.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Tournament service. Represents a row in the &quot;sports_tournament&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.sports.portlet.tournament.model.impl.TournamentModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.sports.portlet.tournament.model.impl.TournamentImpl}.
 * </p>
 *
 * @author vijayan.chendrayan
 * @see Tournament
 * @see com.sports.portlet.tournament.model.impl.TournamentImpl
 * @see com.sports.portlet.tournament.model.impl.TournamentModelImpl
 * @generated
 */
public interface TournamentModel extends BaseModel<Tournament> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a tournament model instance should use the {@link Tournament} interface instead.
	 */

	/**
	 * Returns the primary key of this tournament.
	 *
	 * @return the primary key of this tournament
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this tournament.
	 *
	 * @param primaryKey the primary key of this tournament
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the tournament ID of this tournament.
	 *
	 * @return the tournament ID of this tournament
	 */
	public long getTournamentId();

	/**
	 * Sets the tournament ID of this tournament.
	 *
	 * @param tournamentId the tournament ID of this tournament
	 */
	public void setTournamentId(long tournamentId);

	/**
	 * Returns the company ID of this tournament.
	 *
	 * @return the company ID of this tournament
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this tournament.
	 *
	 * @param companyId the company ID of this tournament
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the group ID of this tournament.
	 *
	 * @return the group ID of this tournament
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this tournament.
	 *
	 * @param groupId the group ID of this tournament
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the created by of this tournament.
	 *
	 * @return the created by of this tournament
	 */
	public long getCreatedBy();

	/**
	 * Sets the created by of this tournament.
	 *
	 * @param createdBy the created by of this tournament
	 */
	public void setCreatedBy(long createdBy);

	/**
	 * Returns the updated by of this tournament.
	 *
	 * @return the updated by of this tournament
	 */
	public long getUpdatedBy();

	/**
	 * Sets the updated by of this tournament.
	 *
	 * @param updatedBy the updated by of this tournament
	 */
	public void setUpdatedBy(long updatedBy);

	/**
	 * Returns the create date of this tournament.
	 *
	 * @return the create date of this tournament
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this tournament.
	 *
	 * @param createDate the create date of this tournament
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this tournament.
	 *
	 * @return the modified date of this tournament
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this tournament.
	 *
	 * @param modifiedDate the modified date of this tournament
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the name of this tournament.
	 *
	 * @return the name of this tournament
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this tournament.
	 *
	 * @param name the name of this tournament
	 */
	public void setName(String name);

	/**
	 * Returns the type of this tournament.
	 *
	 * @return the type of this tournament
	 */
	@AutoEscape
	public String getType();

	/**
	 * Sets the type of this tournament.
	 *
	 * @param type the type of this tournament
	 */
	public void setType(String type);

	/**
	 * Returns the no of teams of this tournament.
	 *
	 * @return the no of teams of this tournament
	 */
	public int getNoOfTeams();

	/**
	 * Sets the no of teams of this tournament.
	 *
	 * @param noOfTeams the no of teams of this tournament
	 */
	public void setNoOfTeams(int noOfTeams);

	/**
	 * Returns the start date of this tournament.
	 *
	 * @return the start date of this tournament
	 */
	public Date getStartDate();

	/**
	 * Sets the start date of this tournament.
	 *
	 * @param startDate the start date of this tournament
	 */
	public void setStartDate(Date startDate);

	/**
	 * Returns the end date of this tournament.
	 *
	 * @return the end date of this tournament
	 */
	public Date getEndDate();

	/**
	 * Sets the end date of this tournament.
	 *
	 * @param endDate the end date of this tournament
	 */
	public void setEndDate(Date endDate);

	/**
	 * Returns the price money of this tournament.
	 *
	 * @return the price money of this tournament
	 */
	@AutoEscape
	public String getPriceMoney();

	/**
	 * Sets the price money of this tournament.
	 *
	 * @param priceMoney the price money of this tournament
	 */
	public void setPriceMoney(String priceMoney);

	/**
	 * Returns the location of this tournament.
	 *
	 * @return the location of this tournament
	 */
	@AutoEscape
	public String getLocation();

	/**
	 * Sets the location of this tournament.
	 *
	 * @param location the location of this tournament
	 */
	public void setLocation(String location);

	/**
	 * Returns the sponsors of this tournament.
	 *
	 * @return the sponsors of this tournament
	 */
	@AutoEscape
	public String getSponsors();

	/**
	 * Sets the sponsors of this tournament.
	 *
	 * @param sponsors the sponsors of this tournament
	 */
	public void setSponsors(String sponsors);

	/**
	 * Returns the logo of this tournament.
	 *
	 * @return the logo of this tournament
	 */
	public long getLogo();

	/**
	 * Sets the logo of this tournament.
	 *
	 * @param logo the logo of this tournament
	 */
	public void setLogo(long logo);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Tournament tournament);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Tournament> toCacheModel();

	@Override
	public Tournament toEscapedModel();

	@Override
	public Tournament toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}